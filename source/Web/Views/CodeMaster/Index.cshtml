@using PagedList;
@using PagedList.Mvc;
@using Core.Models;
@using Core.Resources.Views.CodeMaster;

@model IPagedList<CodeMaster>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = CodeMasterViewResource.Title;
    Layout = "~/Views/Shared/_LayoutBackEnd.cshtml";
    List<CodeMaster> editableCodeList = CodeMaster.GetListByTypeWithLocalization("EditableCode", Culture);
}

<h2>@ViewBag.Title</h2>

@if (editableCodeList.Count <= 0)
{
    <p>
        @CodeMasterViewResource.NoEditableCode
    </p>
}
else
{
    <text>

        @{CodeMaster currentEditableCode = editableCodeList.FirstOrDefault(m => m.CodeMasterCode == ViewBag.CurrentCodeType);
        if (currentEditableCode != null)
        {
            editableCodeList.Remove(currentEditableCode);
        }
        else
        {
            currentEditableCode = editableCodeList[0];
            editableCodeList.RemoveAt(0);
        }}
        <p>
            @Html.ActionLink(@CodeMasterViewResource.CreateNew, "Create", new { currentCodeType = ViewBag.CurrentCodeType })
        </p>
        @using (Html.BeginForm("Index", "CodeMaster", FormMethod.Get, new { Class = "navbar-form navbar-left", Role = "search" }))
        {
            @Html.Hidden("currentCodeType", ViewBag.CurrentCodeType as string)
            <div class="form-group">
                <input name="SearchString" type="text" class="form-control" placeholder="@CodeMasterViewResource.FindByValue" value="@ViewBag.CurrentFilter">
            </div>
            <div class="form-group">
                <input name="ParentValue" type="text" class="form-control" placeholder="@CodeMasterViewResource.ParentValue" value="@ViewBag.CurrentParentValue">
            </div>
            <button type="submit" class="btn btn-default">@CodeMasterViewResource.Search</button>
            <div class="btn-group">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                    @currentEditableCode.LocalizedValue
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">
                    @foreach (CodeMaster item in editableCodeList)
                    {
                        <li>
                            @Html.ActionLink(item.LocalizedValue, "Index", "CodeMaster", new { CodeType = item.CodeMasterCode }, null)
                        </li>
                    }
                </ul>
            </div>
        }
        <br />
        <table class="table">
            <tr>
                <th>
                    @Html.ActionLink(CodeMasterViewResource.Id, "Index", new { sortOrder = ViewBag.IdSortParm, currentFilter = ViewBag.CurrentFilter, currentCodeType = ViewBag.CurrentCodeType, currentParentValue = ViewBag.CurrentParentValue })
                </th>
                <th>
                    @Html.ActionLink(CodeMasterViewResource.Value, "Index", new { sortOrder = ViewBag.ValueSortParm, currentFilter = ViewBag.CurrentFilter, currentCodeType = ViewBag.CurrentCodeType, currentParentValue = ViewBag.CurrentParentValue })
                </th>
                <th>
                    @Html.ActionLink(CodeMasterViewResource.LastUpdatedDateTime, "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter, currentCodeType = ViewBag.CurrentCodeType, currentParentValue = ViewBag.CurrentParentValue })
                </th>
                <th></th>
            </tr>


            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CodeMasterValue)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedDateTime)
                    </td>
                    <td>
                        @Html.ActionLink(CodeMasterViewResource.Edit, "Edit", new { id = item.Id }) |
                        @Html.ActionLink(CodeMasterViewResource.Delete, "Delete", new { id = item.Id })
                    </td>
                </tr>
            }

        </table>
        <br />
        @string.Format(CodeMasterViewResource.PageOf, ViewBag.TotalSearchResult, Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber, @Model.PageCount)

        @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </text>
}